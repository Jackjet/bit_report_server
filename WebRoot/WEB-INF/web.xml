<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="reporter" version="3.0">
  <display-name>reporter</display-name>
  <!-- 普通的发布jaxrs -->
  <!--  
  <servlet>
    <servlet-name>javax.ws.rs.core.Application</servlet-name>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>javax.ws.rs.core.Application</servlet-name>
  	<url-pattern>/rest-api/*</url-pattern>
  </servlet-mapping>
  -->
  
  
  <!-- Jersey Servlet 与spring ​ 配置 -->
	<servlet>
		<servlet-name>Jersey Spring</servlet-name>
		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<!-- 系统启动时扫描的包的路径 -->
			<param-value>zhenhe.li.report.birt.task.rest</param-value>
		</init-param>
		<init-param>  
            <param-name>  
                com.sun.jersey.api.json.POJOMappingFeature  
            </param-name>  
            <param-value>true</param-value>  
        </init-param>  
  
   
        <load-on-startup>1</load-on-startup>  
	</servlet>
	
	<servlet-mapping>  
        <servlet-name>Jersey Spring</servlet-name>  
        <url-pattern>/rest-api/*</url-pattern>  
    </servlet-mapping> 
  
  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>web.root</param-value>
  </context-param>
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>
  <context-param>
    <description>spring 需要由contextLoader 加载的配置文件的路径</description>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/service-context.xml</param-value>
  </context-param>
  <listener>
  	<description>加载log4j配置</description>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <listener>
    <description>spring 配置加载器</description>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--report 系统数据源相关-->
   <filter>
    <description>report session延时加载</description>
    <filter-name>reportOpenSessionInViewFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    <init-param>
       <param-name>sessionFactoryBeanName</param-name>
       <param-value>reportSessionFactory</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>reportOpenSessionInViewFilter</filter-name>
    <url-pattern>/reportTask/*</url-pattern>
  </filter-mapping>
  
  <filter>
    <description>对Request请求URL进行编码</description>
    <filter-name>springCharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
  </filter>
  
  <filter-mapping>
    <filter-name>springCharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <servlet>
    <description>spring mvc 请求分派器</description>
    <servlet-name>spring-mvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>spring-mvc</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
    <listener id="ReportEngineStartupListener">
        <description>报表服务启动</description>
        <display-name>报表服务启动</display-name>
        <listener-class>zhenhe.li.report.birt.web.listener.ReportEngineStartupListener</listener-class>
    </listener>
</web-app>